# devsk.git.gitconfig

[user]
    # Basic user configuration 
    email = kennes913@gmail.com
    name = kennes913

#[core]
#    # if you use windows
#    #autocrlf = true
#
#    # use aggressive compression
#    # can make your repo smaller but can also be slow
#    compression = 9
#
#    # lets you define a global .gitignore for all those 
#    # *.swp, *~, *.o, etc things that you're frequently 
#    # sticking in .gitignore
#    excludesfile = ~/.gitignore_global
#
#    # tells git to ignore file permission changes
#    filemode = false
#
#    # lets you tweak the default pager
#    # see `man less` for the meaning of these flags
#    pager = 'less -FRSX'
#
#    # just because you said not to ;)
#    # probably not a good default for most projects, 
#    # but you should set something here based on your needs
#    whitespace = tab-in-indent
#[color]
#    # this turns on default colors for many commands
#    # or you can customize specific colors per command (see [3] for example)
#    ui = auto
#[rerere]
#    # google `git rerere`, basically git remembers your
#    # partial merge choices and replays them next time
#    enabled = true
#    autoupdate = true
#[push]
#    # let's you say just `git push origin` to push the current branch
#    default = current 
#[alias]
#    # this is the most subjective section 
#
#    # aliases are useful if you either frequently typo certain words
#    # or else if you are used to another VC like cvs or svn
#    co = checkout
#    ci = commit
#    st = status
#    br = branch -av
#    brdel = branch -D
#
#    # Show all of my configured aliases
#    aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort
#
#    # pretty much everybody has their favorite log format view
#    # you can find dozens of variations with a quick google
#    # here are couple of the most common (the first is my favorite)
#    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
#    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
